/*
 # -----------------------------------------------------------------------------
 # ~/assets/theme/j1/modules/videojs/js/plugins/controls/autocaption/autocaption.min.js
 # Provides the autocaption plugin for Video.js V8 and newer
 # See: https://github.com/mister-ben/videojs-auto-caption/edit/master/README.md
 #
 # Product/Info:
 # https://github.com/mister-ben/videojs-auto-caption
 # http://jekyll.one
 #
 # Copyright (C) 2023 mister-ben
 # Copyright (C) 2023-2025 Juergen Adams
 #
 # videojs-auto-caption is licensed under the Apache License 2.0.
 # See: https://github.com/mister-ben/videojs-auto-caption/blob/master/LICENSE
 # J1 Theme is licensed under MIT License.
 # See: https://github.com/jekyll-one-org/j1-template/blob/main/LICENSE
 # -----------------------------------------------------------------------------
*/

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("video.js")):"function"==typeof define&&define.amd?define(["video.js"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).videojsskipButtons=t(e.videojs)}(this,function(e){"use strict";var t=function(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}(e);t.default.getComponent("Button");const o={enabled:!1},n=function(){const e=this.language(),t=this.textTracks(),o={exact:[],twoletter:[],fallback:[],default:[]};Array.prototype.filter.call(t,e=>"subtitles"===e.kind||"captions"===e.kind).forEach(t=>{const n=t.language.toLowerCase();n.split("-")[0]===e.split("-")[0]&&(o.twoletter.push(t),n===e&&o.exact.push(t)),t.default&&o.default.push(t)});const n=o.exact.concat(o.twoletter).concat(o.defaultMatches);if(n.length>0){const e=n[0];for(let o=0;o<t.length;o++)t[o]===e?t[o].mode="showing":t[o].mode="disabled"}},a=function(t){this.ready(()=>{((e,t)=>{e.addClass("vjs-auto-caption"),e.usingPlugin("perSourceBehaviors")?e.on("sourcechanged",function(){e.onePerSrc("canplay",n)}):e.one("canplay",n)})(this,e.mergeOptions(o,t))})};return t.default.registerPlugin("autoCaption",a),a});
