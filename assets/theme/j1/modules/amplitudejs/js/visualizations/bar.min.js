/*
 # -----------------------------------------------------------------------------
 # ~/assets/theme/j1/modules/amplitudejs/js/visualizations/bar.min.js
 # AmplitudeJS v5.3.2 Visualization (FX)
 #
 # Product/Info:
 # https://jekyll.one
 # https://github.com/serversideup/amplitudejs
 #
 # Copyright (C) 2021 521 Dimensions
 # Copyright (C) 2023-2025 Juergen Adams
 #
 # J1 Template is licensed under the MIT License.
 # See: https://github.com/jekyll-one-org/j1-template/blob/main/LICENSE
 # Amplitudejs is licensed under the MIT License.
 # See: https://github.com/serversideup/amplitudejs/blob/master/LICENSE
 # -----------------------------------------------------------------------------
*/

function BarVisualization(){this.id="bar_visualization",this.name="Bar Visualization",this.container="",this.preferences={bar_color:"#ff0000",width:500,height:200,inherit:!0,spacer_width:10,bar_width:5,offset:100,cutoff:23},this.analyser="",this.canvasHeight="",this.canvasWidth="",this.ctx="",this.canvas="",this.requestAnimation="",this.getID=function(){return this.id},this.getName=function(){return this.name},this.setPreferences=function(t){for(var i in this.preferences)null!=t[i]&&(this.preferences[i]=t[i])},this.startVisualization=function(t){this.analyser=Amplitude.getAnalyser(),this.container=t,this.canvas=document.createElement("canvas"),this.preferences.inherit&&(this.preferences.width=this.container.offsetWidth,this.preferences.height=this.container.offsetHeight),this.canvas.setAttribute("width",this.preferences.width),this.canvas.setAttribute("height",this.preferences.height),this.ctx=this.canvas.getContext("2d"),this.container.appendChild(this.canvas),this.canvasHeight=this.canvas.height,this.canvasWidth=this.canvas.width,this.rafCallback()},this.stopVisualization=function(){window.cancelAnimationFrame(this.requestAnimation),this.container.innerHTML=""},this.rafCallback=function(){this.requestAnimation=window.requestAnimationFrame(this.rafCallback.bind(this),this.canvas);let t=new Uint8Array(this.analyser.frequencyBinCount);this.analyser.getByteFrequencyData(t);let i=Math.round(this.canvasWidth/this.preferences.spacer_width);this.ctx.clearRect(0,0,this.canvasWidth,this.canvasHeight),this.ctx.fillStyle=this.preferences.bar_color,this.ctx.lineCap="round";for(let e=0;e<i;e++){let i=t[e+this.preferences.offset];this.ctx.fillRect(e*this.preferences.spacer_width,this.canvasHeight,this.preferences.bar_width,-i)}}}
